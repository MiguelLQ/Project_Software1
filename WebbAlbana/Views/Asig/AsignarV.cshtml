@model albanaPlayaEst.Dto.AsignarVDto
@{
    ViewBag.Title = "Asignar Vehículo a Espacio";
}

@* <h2 class="text-center my-4 text-primary">Asignar Vehículo al Espacio @Model.Ubi_esp</h2> *@

<h2 class="text-center my-4 text-primary">Asignar Vehículo</h2>

<div class="container border rounded p-4 shadow-sm bg-light">
    <!-- Mensaje de error (si no se encuentra el vehículo) -->
    
    <div id="mensajeError"></div> <!-- Aquí aparecerá el mensaje de error con estilo -->

    <!-- Formulario para buscar vehículo -->
    <form id="buscarVehiculoForm" class="mb-4">
        @Html.AntiForgeryToken()
        <div class="mb-3">
            <label for="PlacaV" class="form-label fw-bold">Buscar por Placa</label>
            <div class="input-group">
                <input id="PlacaV" name="PlacaV" class="form-control" placeholder="Ingrese la placa del vehículo"/>
                <button type="button" class="btn btn-success" onclick="buscarVehiculo()">Buscar</button>
            </div>
        </div>
    </form>
    <div id="enlaceAgregar">
        
    </div> <!-- Aquí aparecerá el enlace para agregar el vehículo -->
    <!-- Formulario principal -->
    <form asp-action="AsignarV" method="post" id="AsignarEspacioForm">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Cod_esp"/>
        <div class="row">
            <!-- Detalles del Vehículo -->
            <div class="col-md-6">
                <h5 class="mb-3 text-success">Detalles del Vehículo</h5>
                <div class="mb-3">
                    <label for="PlacaV" class="form-label fw-bold">Placa</label>
                    <input id="Placa" name="PlacaV" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="MarcV" class="form-label fw-bold">Marca</label>
                    <input id="MarcV" name="MarcV" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="ModelV" class="form-label fw-bold">Modelo</label>
                    <input id="ModelV" name="ModelV" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="ColorV" class="form-label fw-bold">Color</label>
                    <input id="ColorV" name="ColorV" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="DescrTipV" class="form-label fw-bold">Tipo de Vehículo</label>
                    <input id="DescrTipV" name="DescrTipV" class="form-control" readonly/>
                </div>
            </div>

            <!-- Detalles del Cliente -->
            <div class="col-md-6">
                <h5 class="mb-3 text-success">Detalles del Cliente</h5>
                <div class="mb-3">
                    <label for="Nom_cliente" class="form-label fw-bold">Nombres</label>
                    <input id="Nom_cliente" name="Nom_cliente" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="Apell_cliente" class="form-label fw-bold">Apellidos</label>
                    <input id="Apell_cliente" name="Apell_cliente" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="Tel_cliente" class="form-label fw-bold">Teléfono</label>
                    <input id="Tel_cliente" name="Tel_cliente" class="form-control" readonly/>
                </div>
                <div class="mb-3">
                    <label for="Dni_cliente" class="form-label fw-bold">DNI</label>
                    <input id="Dni_cliente" name="Dni_cliente" class="form-control" readonly/>
                </div>
            </div>
        </div>

        <!-- Detalles de la reservación -->
        <div class="mb-3">
            <label for="FechaEntrada" class="form-label fw-bold">Fecha Entrada</label>
            <input asp-for="FechaEntrada" type="datetime-local" class="form-control"/>
        </div>
        <div class="mb-3">
            <label for="FechaHoraSalida" class="form-label fw-bold">Fecha salida</label>
            <input asp-for="FechaHoraSalida" type="datetime-local" class="form-control"/>
        </div>
        <div class="card mb-4">
            <div class="card-header bg-warning text-white">
                <h4>Detalles de Pago</h4>
            </div>
            <div class="card-body">
                <!-- Monto del pago -->
                <div class="form-group">
                    <label for="MontPag" class="form-label">Monto a Pagar</label>
                    <input
                        type="number"
                        step="0.01"
                        class="form-control"
                        id="MontPag"
                        name="MontPag"
                        value="@Model.MontPag"
                        placeholder="Ingrese el monto a pagar"
                        required/>
                    <div class="invalid-feedback">Por favor, ingrese un monto válido.</div>
                </div>

                <!-- Selección del Método de Pago -->
                <div class="form-group">
                    <label asp-for="CodMetd" class="control-label">Método de Pago</label>
                    <select asp-for="CodMetd" class="form-control" asp-items="@(ViewData["MetodosPago"] as IEnumerable<SelectListItem>)">
                        <option value="">Seleccione un método de pago</option>
                    </select>
                    <span asp-validation-for="CodMetd" class="text-danger"></span>
                </div>

                <!-- Checkbox para pago recurrente -->
                <div class="form-check my-3">
                    <input class="form-check-input" type="checkbox" id="PagoRecurrente" name="EsPagoRecurrente" value="true" @checked(Model.EsPagoRecurrente)/>
                    <label class="form-check-label" for="EsPagoRecurrente">Pago Recurrente</label>
                </div>

                <!-- Fecha Fin (solo visible si es recurrente) -->
                <div class="form-group" id="FechaInicioDiv" style="display:none;">
                    <label for="FechaInicio" class="form-label">Fecha de Pago</label>
                    <input type="datetime-local" id="FechaInicio" name="FechaInicio" class="form-control"/>
                </div>
                
            </div>
        </div>
        <!-- Botón de registrar -->
        <div class="text-end mt-4">
            <button type="submit" class="btn btn-primary px-4">
                <i class="bi bi-check-circle"></i> Registrar
            </button>
        </div>
    </form>
    <div class=" mt-3">
        <a asp-action="Index" class="btn btn-secondary">Volver a la lista</a>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Manejar visibilidad al cargar la página
            if ($('#PagoRecurrente').is(':checked')) {
                $('#FechaInicioDiv').show();
                $('#FechaInicio').prop('disabled', false);
            } else {
                $('#FechaInicioDiv').hide();
                $('#FechaInicio').prop('disabled', true);
            }

            // Manejar cambios en el checkbox
            $('#PagoRecurrente').change(function () {
                if ($(this).is(':checked')) {
                    $('#FechaInicioDiv').show();
                    $('#FechaInicio').prop('disabled', false);
                } else {
                    $('#FechaInicioDiv').hide();
                    $('#FechaInicio').prop('disabled', true);
                    $('#FechaInicio').val(''); // Limpiar el valor del campo
                }
            });
        });

        $('#AsignarEspacioForm').submit(function (e) {
            e.preventDefault(); // Prevenir el envío normal del formulario

            // Deshabilitar el campo si el pago no es recurrente
            if (!$('#PagoRecurrente').is(':checked')) {
                $('#FechaInicio').prop('disabled', true);
            }

            var formDat = $(this).serialize(); // Serializar datos del formulario
            console.log("Datos enviados al servidor: ", formDat); // Imprimir los datos enviados

            // Rehabilitar el campo para futuras interacciones
            $('#FechaInicio').prop('disabled', false);

            $.ajax({
                url: '@Url.Action("AsignarV", "Asig")',
                type: 'POST',
                data: formDat,
                success: function (response) {
                    if (response.success) {
                        alert("Espacio asignado correctamente.");
                    } else {
                        alert("Error: " + response.error);
                    }
                    window.location.href = '@Url.Action("Index", "Asig")';
                },
                error: function (xhr, status, error) {
                    console.error("Error en la solicitud AJAX: ", error);
                    alert("Error en la solicitud AJAX");
                    window.location.href = '@Url.Action("Index", "Asig")';
                }
            });
        });
        function buscarVehiculo() {
            // Obtener el valor del campo de placa
            var placa = $("#PlacaV").val().trim();

            // Validar que se ingrese un valor
            if (placa === "") {
                alert("Por favor ingrese una placa.");
                return;
            }

            // Realizar la solicitud AJAX
            $.ajax({
                url: '@Url.Action("BuscarVehiculoPorPlacaAjax", "Asig")',
                type: 'POST',
                data: { placa: placa }, // Envía la placa al servidor
                success: function (response) {
                    console.log(response); // Verifica el JSON devuelto
                    if (response.success) {
                        // Accede a las propiedades del objeto correctamente
                        const vehiculo = response.vehiculo;
                        console.log("Vehículo encontrado:", vehiculo);

                        // Asignación de valores a los campos del formulario
                        $("#Placa").val(vehiculo.placaV || "No especificado");
                        $("#MarcV").val(vehiculo.marcV || "No especificado");
                        $("#ModelV").val(vehiculo.modelV || "No especificado");
                        $("#ColorV").val(vehiculo.colorV || "No especificado");

                        // Asignación de Tipo de Vehículo
                        $("#DescrTipV").val(vehiculo.descrTipV || "No especificado");

                        // Asignación de Cliente
                        if (vehiculo.cliente) {
                            $("#Nom_cliente").val(vehiculo.cliente.nom_cliente || "No especificado");
                            $("#Apell_cliente").val(vehiculo.cliente.apell_cliente || "No especificado");
                            $("#Tel_cliente").val(vehiculo.cliente.tel_cliente || "No especificado");
                            $("#Dni_cliente").val(vehiculo.cliente.dni_cliente || "No especificado");
                        } else {
                            $("#Nom_cliente").val("No especificado");
                            $("#Apell_cliente").val("No especificado");
                            $("#Tel_cliente").val("No especificado");
                            $("#Dni_cliente").val("No especificado");
                        }

                    } else {
                        // Si no se encuentra el vehículo, mostrar mensaje con estilo
                        var mensajeError = $("<div>", {
                            class: "alert alert-danger alert-dismissible fade show", // Clases de Bootstrap
                            role: "alert", // Definir como un mensaje de alerta
                            text: response.message // El mensaje de error
                        });

                        // Botón para cerrar la alerta
                        var closeButton = $("<button>", {
                            type: "button",
                            class: "close",
                            "data-dismiss": "alert", // Cierra el mensaje
                            "aria-label": "Close"
                        }).html('&times;'); // El símbolo de cierre (×)

                        mensajeError.append(closeButton); // Añadir el botón de cierre a la alerta

                        // Inyectar el mensaje en un contenedor específico de la vista
                        $("#mensajeError").html(mensajeError);
                        // Si no se encuentra el vehículo, mostrar mensaje y enlace
                        alert(response.message);

                        // Crear un enlace para agregar el vehículo
                        var enlaceAgregar = $("<a>", {
                            text: "registrar un nuevo vehículo",
                            href: '@Url.Action("AgregarV", "Vehiculo")', // Enlace a la acción AgregarV
                            class: "btn btn-primary"
                        });

                        // Agregar el enlace al DOM (puedes cambiar el contenedor según necesites)
                        $("#enlaceAgregar").html(enlaceAgregar);
                    }
                }
            });
        }
    
    </script>
}
